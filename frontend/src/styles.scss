// use material design framework
@use '@angular/material' as mat;
@use 'app/core/footer/footer.component-theme' as footer;
@use 'app/core/header/header.component-theme' as header;
@use 'app/pages/page-not-found/page-not-found.component-theme' as page-not-found;
@use 'app/pages/rules/rules.component-theme' as rules;

// import common material styles
@include mat.core();

// Define a dark theme
$dark-theme: mat.define-dark-theme((
    color: (
        primary: mat.define-palette(mat.$pink-palette),
        accent: mat.define-palette(mat.$blue-grey-palette),
    ),
    // Only include `typography` and `density` in the default dark theme.
    typography: mat.define-typography-config(),
    density: 0,
));

// Define a light theme
$light-theme: mat.define-light-theme((
    color: (
        primary: mat.define-palette(mat.$indigo-palette),
        accent: mat.define-palette(mat.$pink-palette),
    ),
));

// Apply the dark theme by default
@include mat.core-theme($dark-theme);
@include mat.button-theme($dark-theme);
@include footer.theme($dark-theme);
@include header.theme($dark-theme);
@include page-not-found.theme($dark-theme);
@include rules.theme($dark-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // typography and density styles.
    @include mat.core-color($light-theme);
    @include mat.button-color($light-theme);
    @include footer.color($light-theme);
    @include header.color($light-theme);
    @include page-not-found.color($light-theme);
    @include rules.color($light-theme);
}

html, body, app-root {
    width: 100%;
    height: 100%;
    margin: 0;
}

app-root {
    display: flex;
    flex-direction: column;
    overflow-y: scroll;
}